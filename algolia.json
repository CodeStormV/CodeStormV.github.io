[{"categories":"posts","content":"\u003col\u003e\n\u003cli\u003e在控制台输入：\u003cbr\u003e\n\u003ccode\u003egit config alias.sync '!f(){ git \u0026quot;$@\u0026quot; \u0026amp;\u0026amp; cd public \u0026amp;\u0026amp; git \u0026quot;$@\u0026quot;; }; f'\u003c/code\u003e\u003cbr\u003e\n或者\u003cbr\u003e\n\u003ccode\u003egit config alias.sync \u0026quot;!f(){ git \\\u0026quot;$@\\\u0026quot; \u0026amp;\u0026amp; git -C public \\\u0026quot;$@\\\u0026quot;; }; f\u0026quot;\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e然后输入：\u003ccode\u003egit sync 命令\u003c/code\u003e 如 \u003ccode\u003egit sync commit -m \u0026quot;提交信息\u0026quot;\u003c/code\u003e 就可以达到子目录执行相同的命令\u003c/li\u003e\n\u003c/ol\u003e\n","date":1697673600,"description":"","fuzzywordcount":100,"kind":"page","lang":"zh","lastmod":1697783784,"objectID":"c1cd47ddfac7368d89f3a08f84bcbdad","publishdate":1697673600,"relpermalink":"/posts/2023/10/submodule-same-command/","section":"posts","summary":"","tags":["Git"],"title":"Git | 设置子目录执行相同命令","url":"https://codestormv.github.io/posts/2023/10/submodule-same-command/","wordcount":83},{"categories":"posts","content":"\u003ch2 id=\"self\"\u003eself\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003eself 在类中出现\u003c/li\u003e\n\u003cli\u003e表示类实例自身的引用，可以调用实例的属性和方法\u003c/li\u003e\n\u003cli\u003e使用 self 的变量作用域在整个类中\u003c/li\u003e\n\u003cli\u003e不使用 self 的变量作用域在整个方法中\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"参考\"\u003e参考\u003c/h2\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"https://stackoverflow.com/questions/2709821\"\u003eWhat is the purpose of the \u003ccode\u003eself\u003c/code\u003e parameter? Why is it needed?\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n","date":1693353600,"description":"","fuzzywordcount":100,"kind":"page","lang":"zh","lastmod":1697731638,"objectID":"7351e1aaeb6ea6d900527daeb1c16061","publishdate":1693353600,"relpermalink":"/posts/2023/08/self-use/","section":"posts","summary":"","tags":["Python","self"],"title":"Python | self 的使用","url":"https://codestormv.github.io/posts/2023/08/self-use/","wordcount":74},{"categories":"posts","content":"\u003ch2 id=\"安装所有-pip-包\"\u003e安装所有 pip 包\u003c/h2\u003e\n\u003cp\u003e\u003ccode\u003epip install -r requirement.txt\u003c/code\u003e\u003cbr\u003e\n\u003ccode\u003e-r\u003c/code\u003e 指定文件\u003c/p\u003e\n\u003ch2 id=\"删除所有-pip-的包\"\u003e删除所有 pip 的包\u003c/h2\u003e\n\u003cp\u003e\u003ccode\u003epip freeze \u0026gt; requirements.txt\u003c/code\u003e\u003cbr\u003e\nfreeze 是指将当前环境中安装的所有包及其版本信息列出，并将其输出到一个文本文件中\n\u003ccode\u003epip uninstall -r requirements.txt -y\u003c/code\u003e\u003cbr\u003e\n\u003ccode\u003e-r\u003c/code\u003e 指定文件\u003cbr\u003e\n\u003ccode\u003e-y\u003c/code\u003e 默认选择同意\u003c/p\u003e\n\u003ch2 id=\"pipreqs-导出所有依赖包\"\u003epipreqs 导出所有依赖包\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e安装 pipreqs \u003ccode\u003epip install pipreqs\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003epipreqs ./ --encoding=utf-8\u003c/code\u003e （导出所有项目依赖包，\u003ccode\u003e--encoding=utf-8\u003c/code\u003e 代表用 \u003ccode\u003eutf-8编码\u003c/code\u003e 来处理）\u003c/li\u003e\n\u003c/ol\u003e\n","date":1693180800,"description":"","fuzzywordcount":200,"kind":"page","lang":"zh","lastmod":1697731633,"objectID":"6a5793f1c627999f710dd532e5b9d328","publishdate":1693180800,"relpermalink":"/posts/2023/08/package-manage/","section":"posts","summary":"","tags":["Python","package"],"title":"Python | 包管理","url":"https://codestormv.github.io/posts/2023/08/package-manage/","wordcount":138},{"categories":"posts","content":"\u003ch2 id=\"报错\"\u003e报错\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eERROR: Failed building wheel for XXX\u003c/li\u003e\n\u003cli\u003eERROR: Could not build wheels for XXX, which is required to install pyproject.toml-based projects\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e原因：缺少 \u003ccode\u003ewhl\u003c/code\u003e 文件\u003cbr\u003e\n解决：\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e到官网下载 \u003ccode\u003ewhl\u003c/code\u003e 文件\u003c/li\u003e\n\u003cli\u003e执行 \u003ccode\u003epip install \u0026quot;文件路径\u0026quot;\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e如果 提示 \u003ccode\u003eERROR: 文件名 is not a supported wheel on this platform\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e将文件中的 \u003ccode\u003ecpXXX\u003c/code\u003e 改为当前 \u003ccode\u003epython\u003c/code\u003e 对应版本 如 \u003ccode\u003ecp311\u003c/code\u003e ，再次执行安装即可\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"参考\"\u003e参考\u003c/h2\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"https://blog.csdn.net/yuangan1529/article/details/116696624\"\u003epython 解决 Failed building wheel for XXX\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n","date":1693180800,"description":"","fuzzywordcount":200,"kind":"page","lang":"zh","lastmod":1693180800,"objectID":"e3711658edff4d36e59f79782f70978b","publishdate":1693180800,"relpermalink":"/posts/2023/08/failed-building-wheel/","section":"posts","summary":"","tags":["Python","Bug"],"title":"Python | 报错 Failed building wheel","url":"https://codestormv.github.io/posts/2023/08/failed-building-wheel/","wordcount":113},{"categories":"posts","content":"\u003ch2 id=\"文件转移\"\u003e文件转移\u003c/h2\u003e\n\u003cp\u003e\u003ccode\u003eVSCode\u003c/code\u003e 会在 C 盘占用一部分空间，进行文件链接转移文件位置。\n文件位置一般位于 \u003ccode\u003eC:\\Users\\用户名\\AppData\\Roaming\\Code\u003c/code\u003e 和 \u003ccode\u003eC:\\User\\用户名\\.vscode\u003c/code\u003e\u003c/p\u003e\n\u003ch2 id=\"操作\"\u003e操作：\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e剪切位于 C 盘的 \u003ccode\u003eVSCode\u003c/code\u003e 文件\u003c/li\u003e\n\u003cli\u003e粘贴到想要转移的位置\u003c/li\u003e\n\u003cli\u003e打开 \u003ccode\u003ecmd\u003c/code\u003e 输入\u003c/li\u003e\n\u003c/ol\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003emklink /J \u0026#34;%APPDATA%\\Code\u0026#34; \u0026#34;目标目录\u0026#34;\r\nmklink /J \u0026#34;%USERPROFILE%\\.vscode\u0026#34; \u0026#34;目标目录\u0026#34;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003ccode\u003e%APPDATA%\u003c/code\u003e 代表 \u003ccode\u003eC:\\Users\\用户名\\AppData\\Roaming\u003c/code\u003e\u003cbr\u003e\n\u003ccode\u003e%USERPROFILE%\u003c/code\u003e 代表 \u003ccode\u003eC:\\User\\用户名\u003c/code\u003e\u003c/p\u003e\n\u003col start=\"4\"\u003e\n\u003cli\u003e完成文件转移\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"参考\"\u003e参考\u003c/h2\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"https://blog.csdn.net/weixin_53510183/article/details/126906182\"\u003eVSCode 修改扩展和用户文件夹目录位置 (Windows)\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n","date":1693180800,"description":"","fuzzywordcount":300,"kind":"page","lang":"zh","lastmod":1697798049,"objectID":"7e5ebdbde5642dfce28d719769699904","publishdate":1693180800,"relpermalink":"/posts/2023/08/file-transfer/","section":"posts","summary":"","tags":["VSCode","File"],"title":"VSCode | 文件转移","url":"https://codestormv.github.io/posts/2023/08/file-transfer/","wordcount":222},{"categories":"posts","content":"\u003ch2 id=\"mklink\"\u003emklink\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e2\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e3\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e4\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e5\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e6\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e7\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e8\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e9\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-cmd\" data-lang=\"cmd\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eMKLINK\u003c/span\u003e [[/D] \u003cspan class=\"p\"\u003e|\u003c/span\u003e [/H] \u003cspan class=\"p\"\u003e|\u003c/span\u003e [/J]] Link Target\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        /D      创建目录符号链接。默认为文件\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                符号链接。\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        /H      创建硬链接而非符号链接。\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        /J      创建目录联接。\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        Link    指定新的符号链接名称。\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        Target  指定新链接引用的路径\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"p\"\u003e(\u003c/span\u003e相对或绝对\u003cspan class=\"p\"\u003e)\u003c/span\u003e。\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003ch3 id=\"使用-d\"\u003e使用 /d\u003c/h3\u003e\n\u003cblockquote\u003e\n\u003cp\u003e创建目录符号链接。默认情况下，此命令创建文件符号链接。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e只能链接文件夹\nlink 不占用硬盘空间\u003cbr\u003e\nlink 位置改变，链接失效，返回原来位置链接恢复\nlink 被复制：原文件内容被复制\u003cbr\u003e\nlink 改名，链接保持\u003cbr\u003e\n原文件位置改变，链接失效，返回原来位置链接恢复\u003cbr\u003e\n原文件改名，链接失效，改回名字链接恢复\u003c/p\u003e\n\u003ch3 id=\"使用-j\"\u003e使用 /j\u003c/h3\u003e\n\u003cblockquote\u003e\n\u003cp\u003e创建目录交叉点。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e只能链接文件夹\u003cbr\u003e\nlink 不占用硬盘空间\u003cbr\u003e\nlink 位置改变：link 移动到的位置变为文件夹而不是链接，将原文件内容移动到 link 移动后的文件夹内，但是原文件和原 link 保持不变，只是内容被转移\u003cbr\u003e\nlink 被复制：原文件内容被复制\u003cbr\u003e\nlink 改名，链接保持\u003cbr\u003e\n原文件位置改变：链接失效，返回原来位置链接恢复\u003cbr\u003e\n原文件改名：链接失效，改回原名链接恢复\u003c/p\u003e\n\u003ch3 id=\"使用-h\"\u003e使用 /h\u003c/h3\u003e\n\u003cblockquote\u003e\n\u003cp\u003e创建硬链接而不是符号链接。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e硬链接\n只能链接文件\u003cbr\u003e\nlink 似乎占用空间\u003cbr\u003e\nlink 位置改变，链接不失效\u003cbr\u003e\nlink 被复制：原文件内容被复制\u003cbr\u003e\nlink 改名，链接保持\n原文件改变位置，链接不失效\u003cbr\u003e\n原文件改名，链接不失效\u003c/p\u003e\n\u003ch3 id=\"不使用\"\u003e不使用\u003c/h3\u003e\n\u003cblockquote\u003e\n\u003cp\u003e创建符号链接\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e符号链接\nlink 不占用硬盘空间\u003cbr\u003e\nlink 位置改变，链接失效，返回原来位置链接恢复\u003cbr\u003e\nlink 被复制：原文件内容被复制\u003cbr\u003e\nlink 改名，链接保持\n原文件位置改变，链接失效，返回原来位置链接恢复\u003cbr\u003e\n原文件改名：链接失效，改回原名链接恢复\u003c/p\u003e\n\u003ch2 id=\"总结\"\u003e总结\u003c/h2\u003e\n\u003cp\u003e\u003ccode\u003e/d\u003c/code\u003e 与 \u003ccode\u003e/j\u003c/code\u003e 区别在于 \u003ccode\u003elink\u003c/code\u003e 位置改变之后内容是否转移。\n\u003ccode\u003e/d\u003c/code\u003e 与 \u003ccode\u003e不使用\u003c/code\u003e 区别在于内容是 \u003ccode\u003e文件\u003c/code\u003e 还是 \u003ccode\u003e文件夹\u003c/code\u003e\u003c/p\u003e\n\u003ch2 id=\"参考\"\u003e参考\u003c/h2\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"https://blog.csdn.net/notback/article/details/73604292\"\u003e关于 mklink 的/D /J 区别\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n","date":1693094400,"description":"","fuzzywordcount":700,"kind":"page","lang":"zh","lastmod":1697794320,"objectID":"ae0ec1201fdcfa60bbe78492825cd769","publishdate":1693094400,"relpermalink":"/posts/2023/08/mklink/","section":"posts","summary":"","tags":["mklink"],"title":"Windows | mklink 的使用","url":"https://codestormv.github.io/posts/2023/08/mklink/","wordcount":620}]